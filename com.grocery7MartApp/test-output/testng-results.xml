<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="64" passed="57" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-05T09:01:17 IST" name="Cross Browser Test Suite" finished-at="2022-08-05T09:09:37 IST" duration-ms="499906">
    <groups>
    </groups>
    <test started-at="2022-08-05T09:01:17 IST" name="Chrome Browser Test" finished-at="2022-08-05T09:07:38 IST" duration-ms="380528">
      <class name="executeClass.ExecuteManageOrderPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:02:17 IST" name="beforeMethod" finished-at="2022-08-05T09:02:24 IST" duration-ms="7511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanSearchAnOrderByUsingOrderId()[pri:1, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:02:24 IST" name="verifyTheAdminCanSearchAnOrderByUsingOrderId" finished-at="2022-08-05T09:02:29 IST" duration-ms="4611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanSearchAnOrderByUsingOrderId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:02:29 IST" name="afterMethod" finished-at="2022-08-05T09:02:29 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanSearchAnOrderByUsingOrderId status=SUCCESS method=ExecuteManageOrderPage.verifyTheAdminCanSearchAnOrderByUsingOrderId()[pri:1, instance:executeClass.ExecuteManageOrderPage@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:04:07 IST" name="beforeMethod" finished-at="2022-08-05T09:04:14 IST" duration-ms="7510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder()[pri:2, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:04:14 IST" name="vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder" finished-at="2022-08-05T09:04:22 IST" duration-ms="7943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOrderPage@449a4f23]" started-at="2022-08-05T09:04:22 IST" name="afterMethod" finished-at="2022-08-05T09:04:23 IST" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder status=SUCCESS method=ExecuteManageOrderPage.vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder()[pri:2, instance:executeClass.ExecuteManageOrderPage@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageOrderPage -->
      <class name="executeClass.ExecuteManageProductPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:01:43 IST" name="beforeMethod" finished-at="2022-08-05T09:01:50 IST" duration-ms="6027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct()[pri:1, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:01:50 IST" name="verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct" finished-at="2022-08-05T09:01:52 IST" duration-ms="2674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:01:52 IST" name="afterMethod" finished-at="2022-08-05T09:01:52 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct status=SUCCESS method=ExecuteManageProductPage.verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct()[pri:1, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:03:28 IST" name="beforeMethod" finished-at="2022-08-05T09:03:35 IST" duration-ms="7289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanAddNewProductOrNot()[pri:2, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:03:35 IST" name="verifyUserCanAddNewProductOrNot" finished-at="2022-08-05T09:03:51 IST" duration-ms="15439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanAddNewProductOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:03:51 IST" name="afterMethod" finished-at="2022-08-05T09:03:52 IST" duration-ms="892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanAddNewProductOrNot status=SUCCESS method=ExecuteManageProductPage.verifyUserCanAddNewProductOrNot()[pri:2, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:05:13 IST" name="beforeMethod" finished-at="2022-08-05T09:05:18 IST" duration-ms="5626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSearchAProductByUsingProductCode()[pri:3, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:05:18 IST" name="verifyUserCanSearchAProductByUsingProductCode" finished-at="2022-08-05T09:05:22 IST" duration-ms="3526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSearchAProductByUsingProductCode -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:05:22 IST" name="afterMethod" finished-at="2022-08-05T09:05:22 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSearchAProductByUsingProductCode status=SUCCESS method=ExecuteManageProductPage.verifyUserCanSearchAProductByUsingProductCode()[pri:3, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:06:15 IST" name="beforeMethod" finished-at="2022-08-05T09:06:21 IST" duration-ms="6796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanDeleteTheCreatedProductOrNot()[pri:4, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:06:21 IST" name="verifyTheUserCanDeleteTheCreatedProductOrNot" finished-at="2022-08-05T09:06:26 IST" duration-ms="4810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanDeleteTheCreatedProductOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:06:26 IST" name="afterMethod" finished-at="2022-08-05T09:06:27 IST" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanDeleteTheCreatedProductOrNot status=SUCCESS method=ExecuteManageProductPage.verifyTheUserCanDeleteTheCreatedProductOrNot()[pri:4, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:04 IST" name="beforeMethod" finished-at="2022-08-05T09:07:12 IST" duration-ms="7654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheReSetButtonIsWorkingFineOrNot()[pri:5, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:12 IST" name="verifyTheReSetButtonIsWorkingFineOrNot" finished-at="2022-08-05T09:07:17 IST" duration-ms="5056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheReSetButtonIsWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:17 IST" name="afterMethod" finished-at="2022-08-05T09:07:17 IST" duration-ms="634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheReSetButtonIsWorkingFineOrNot status=SUCCESS method=ExecuteManageProductPage.verifyTheReSetButtonIsWorkingFineOrNot()[pri:5, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:17 IST" name="beforeMethod" finished-at="2022-08-05T09:07:26 IST" duration-ms="8646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton()[pri:6, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:26 IST" name="verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton" finished-at="2022-08-05T09:07:35 IST" duration-ms="8797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@1530c739]" started-at="2022-08-05T09:07:35 IST" name="afterMethod" finished-at="2022-08-05T09:07:38 IST" duration-ms="2839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton status=SUCCESS method=ExecuteManageProductPage.verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton()[pri:6, instance:executeClass.ExecuteManageProductPage@1530c739] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageProductPage -->
      <class name="executeClass.ExecuteManageUsersPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:02:29 IST" name="beforeMethod" finished-at="2022-08-05T09:02:36 IST" duration-ms="6714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers()[pri:1, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:02:36 IST" name="verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers" finished-at="2022-08-05T09:02:39 IST" duration-ms="2702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:02:39 IST" name="afterMethod" finished-at="2022-08-05T09:02:39 IST" duration-ms="783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers status=SUCCESS method=ExecuteManageUsersPage.verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers()[pri:1, instance:executeClass.ExecuteManageUsersPage@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:03:52 IST" name="beforeMethod" finished-at="2022-08-05T09:03:59 IST" duration-ms="7552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUsercnaSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:03:59 IST" name="verifyUsercnaSearchAUserByUsingName" finished-at="2022-08-05T09:04:03 IST" duration-ms="3505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercnaSearchAUserByUsingName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:04:03 IST" name="afterMethod" finished-at="2022-08-05T09:04:07 IST" duration-ms="4228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercnaSearchAUserByUsingName status=SUCCESS method=ExecuteManageUsersPage.verifyUsercnaSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteManageUsersPage@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:05:02 IST" name="beforeMethod" finished-at="2022-08-05T09:05:08 IST" duration-ms="6510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanSearchAUserByUsingEmailId()[pri:3, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:05:08 IST" name="verifyTheUserCanSearchAUserByUsingEmailId" finished-at="2022-08-05T09:05:12 IST" duration-ms="4379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanSearchAUserByUsingEmailId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:05:12 IST" name="afterMethod" finished-at="2022-08-05T09:05:13 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanSearchAUserByUsingEmailId status=SUCCESS method=ExecuteManageUsersPage.verifyTheUserCanSearchAUserByUsingEmailId()[pri:3, instance:executeClass.ExecuteManageUsersPage@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:05:57 IST" name="beforeMethod" finished-at="2022-08-05T09:06:04 IST" duration-ms="6755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser()[pri:4, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:06:04 IST" name="verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser" finished-at="2022-08-05T09:06:14 IST" duration-ms="9829" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//i[@class='fa fa-unlock'])[8]"}
  (Session info: chrome=104.0.5112.80)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [dd99d0aad458db710205e3a7ac900b01, findElement {using=xpath, value=(//i[@class='fa fa-unlock'])[8]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.80, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:53711}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53711/devtoo..., se:cdpVersion: 104.0.5112.80, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dd99d0aad458db710205e3a7ac900b01]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//i[@class='fa fa-unlock'])[8]"}
  (Session info: chrome=104.0.5112.80)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [dd99d0aad458db710205e3a7ac900b01, findElement {using=xpath, value=(//i[@class='fa fa-unlock'])[8]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.80, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:53711}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53711/devtoo..., se:cdpVersion: 104.0.5112.80, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: dd99d0aad458db710205e3a7ac900b01
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:51)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:500)
at utility.GeneralUtilities.scrollToFindAnElement(GeneralUtilities.java:52)
at elementRepository.ManageUsersPage.scrollInToSoftWareTesterStatus(ManageUsersPage.java:106)
at executeClass.ExecuteManageUsersPage.verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser(ExecuteManageUsersPage.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@78e4deb0]" started-at="2022-08-05T09:06:14 IST" name="afterMethod" finished-at="2022-08-05T09:06:15 IST" duration-ms="1007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser status=FAILURE method=ExecuteManageUsersPage.verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser()[pri:4, instance:executeClass.ExecuteManageUsersPage@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageUsersPage -->
      <class name="executeClass.ExecuteLoginPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:01 IST" name="beforeMethod" finished-at="2022-08-05T09:02:06 IST" duration-ms="5367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginPageIsvisibleWhileLaunchingTheApplication()[pri:1, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:06 IST" name="verifyLoginPageIsvisibleWhileLaunchingTheApplication" finished-at="2022-08-05T09:02:06 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageIsvisibleWhileLaunchingTheApplication -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:06 IST" name="afterMethod" finished-at="2022-08-05T09:02:07 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageIsvisibleWhileLaunchingTheApplication status=SUCCESS method=ExecuteLoginPage.verifyLoginPageIsvisibleWhileLaunchingTheApplication()[pri:1, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:47 IST" name="beforeMethod" finished-at="2022-08-05T09:02:53 IST" duration-ms="6546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isrememberMeCheckBoxSelectedOrNot()[pri:2, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:53 IST" name="isrememberMeCheckBoxSelectedOrNot" finished-at="2022-08-05T09:02:53 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isrememberMeCheckBoxSelectedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:02:53 IST" name="afterMethod" finished-at="2022-08-05T09:02:54 IST" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isrememberMeCheckBoxSelectedOrNot status=SUCCESS method=ExecuteLoginPage.isrememberMeCheckBoxSelectedOrNot()[pri:2, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:05:33 IST" name="beforeMethod" finished-at="2022-08-05T09:05:41 IST" duration-ms="7906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifysuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:05:41 IST" name="verifysuccessfulLogin" data-provider="DataProvider1" finished-at="2022-08-05T09:05:42 IST" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifysuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:05:42 IST" name="afterMethod" finished-at="2022-08-05T09:05:43 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifysuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifysuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:27 IST" name="beforeMethod" finished-at="2022-08-05T09:06:34 IST" duration-ms="7055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:34 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:06:34 IST" duration-ms="614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:34 IST" name="afterMethod" finished-at="2022-08-05T09:06:35 IST" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:35 IST" name="beforeMethod" finished-at="2022-08-05T09:06:40 IST" duration-ms="5970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:40 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:06:42 IST" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ad12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:42 IST" name="afterMethod" finished-at="2022-08-05T09:06:42 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:42 IST" name="beforeMethod" finished-at="2022-08-05T09:06:52 IST" duration-ms="9510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:52 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:06:53 IST" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adm155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[afrt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@6fdbe764]" started-at="2022-08-05T09:06:53 IST" name="afterMethod" finished-at="2022-08-05T09:06:53 IST" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@6fdbe764] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteLoginPage -->
      <class name="executeClass.executePushNotificationPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:02:07 IST" name="beforeMethod" finished-at="2022-08-05T09:02:13 IST" duration-ms="6586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification()[pri:1, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:02:13 IST" name="verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification" finished-at="2022-08-05T09:02:16 IST" duration-ms="2282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:02:16 IST" name="afterMethod" finished-at="2022-08-05T09:02:17 IST" duration-ms="1245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification status=SUCCESS method=executePushNotificationPage.verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification()[pri:1, instance:executeClass.executePushNotificationPage@6e9175d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:03:04 IST" name="beforeMethod" finished-at="2022-08-05T09:03:11 IST" duration-ms="6920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanSendANotificationSuccessfullyOrNot()[pri:2, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:03:11 IST" name="verifyTheAdminCanSendANotificationSuccessfullyOrNot" finished-at="2022-08-05T09:03:15 IST" duration-ms="3845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanSendANotificationSuccessfullyOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:03:15 IST" name="afterMethod" finished-at="2022-08-05T09:03:16 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanSendANotificationSuccessfullyOrNot status=SUCCESS method=executePushNotificationPage.verifyTheAdminCanSendANotificationSuccessfullyOrNot()[pri:2, instance:executeClass.executePushNotificationPage@6e9175d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:04:50 IST" name="beforeMethod" finished-at="2022-08-05T09:04:56 IST" duration-ms="6123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheResetButtonIsVisibleOrNot()[pri:3, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:04:56 IST" name="verifyTheResetButtonIsVisibleOrNot" finished-at="2022-08-05T09:04:57 IST" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheResetButtonIsVisibleOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@6e9175d8]" started-at="2022-08-05T09:04:57 IST" name="afterMethod" finished-at="2022-08-05T09:05:02 IST" duration-ms="4202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheResetButtonIsVisibleOrNot status=SUCCESS method=executePushNotificationPage.verifyTheResetButtonIsVisibleOrNot()[pri:3, instance:executeClass.executePushNotificationPage@6e9175d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.executePushNotificationPage -->
      <class name="executeClass.ExecuteDashBoardPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:01:17 IST" name="beforeMethod" finished-at="2022-08-05T09:01:29 IST" duration-ms="11482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dashBoardIsVisibleAfterSuccessfulLogin()[pri:1, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:01:29 IST" name="dashBoardIsVisibleAfterSuccessfulLogin" finished-at="2022-08-05T09:01:33 IST" duration-ms="4045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashBoardIsVisibleAfterSuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:01:33 IST" name="afterMethod" finished-at="2022-08-05T09:01:34 IST" duration-ms="1561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dashBoardIsVisibleAfterSuccessfulLogin status=SUCCESS method=ExecuteDashBoardPage.dashBoardIsVisibleAfterSuccessfulLogin()[pri:1, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:02:39 IST" name="beforeMethod" finished-at="2022-08-05T09:02:45 IST" duration-ms="6025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isManagePageTileVisibleOrNot()[pri:2, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:02:45 IST" name="isManagePageTileVisibleOrNot" finished-at="2022-08-05T09:02:47 IST" duration-ms="1222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isManagePageTileVisibleOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:02:47 IST" name="afterMethod" finished-at="2022-08-05T09:02:47 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isManagePageTileVisibleOrNot status=SUCCESS method=ExecuteDashBoardPage.isManagePageTileVisibleOrNot()[pri:2, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:04:23 IST" name="beforeMethod" finished-at="2022-08-05T09:04:30 IST" duration-ms="6920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="manageUsersMoreInfoArrowClicableOrNot()[pri:3, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:04:30 IST" name="manageUsersMoreInfoArrowClicableOrNot" finished-at="2022-08-05T09:04:32 IST" duration-ms="2688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageUsersMoreInfoArrowClicableOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b]" started-at="2022-08-05T09:04:32 IST" name="afterMethod" finished-at="2022-08-05T09:04:37 IST" duration-ms="4210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageUsersMoreInfoArrowClicableOrNot status=SUCCESS method=ExecuteDashBoardPage.manageUsersMoreInfoArrowClicableOrNot()[pri:3, instance:executeClass.ExecuteDashBoardPage@2e8c1c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteDashBoardPage -->
      <class name="executeClass.ExecuteVerifyUsersPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:01:52 IST" name="beforeMethod" finished-at="2022-08-05T09:01:59 IST" duration-ms="6597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers()[pri:1, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:01:59 IST" name="verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers" finished-at="2022-08-05T09:02:01 IST" duration-ms="1894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:02:01 IST" name="afterMethod" finished-at="2022-08-05T09:02:01 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers status=SUCCESS method=ExecuteVerifyUsersPage.verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers()[pri:1, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:03:16 IST" name="beforeMethod" finished-at="2022-08-05T09:03:23 IST" duration-ms="7019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:03:23 IST" name="verifyTheUserCanSearchAUserByUsingName" finished-at="2022-08-05T09:03:27 IST" duration-ms="4204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanSearchAUserByUsingName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:03:27 IST" name="afterMethod" finished-at="2022-08-05T09:03:28 IST" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanSearchAUserByUsingName status=SUCCESS method=ExecuteVerifyUsersPage.verifyTheUserCanSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:05:22 IST" name="beforeMethod" finished-at="2022-08-05T09:05:29 IST" duration-ms="6842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSearchAUserByUsingPhoneNumber()[pri:3, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:05:29 IST" name="verifyUserCanSearchAUserByUsingPhoneNumber" finished-at="2022-08-05T09:05:33 IST" duration-ms="3849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSearchAUserByUsingPhoneNumber -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0]" started-at="2022-08-05T09:05:33 IST" name="afterMethod" finished-at="2022-08-05T09:05:33 IST" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSearchAUserByUsingPhoneNumber status=SUCCESS method=ExecuteVerifyUsersPage.verifyUserCanSearchAUserByUsingPhoneNumber()[pri:3, instance:executeClass.ExecuteVerifyUsersPage@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteVerifyUsersPage -->
      <class name="executeClass.ExecuteManageExpensePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:01:34 IST" name="beforeMethod" finished-at="2022-08-05T09:01:41 IST" duration-ms="6521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense()[pri:1, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:01:41 IST" name="verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense" finished-at="2022-08-05T09:01:43 IST" duration-ms="2345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:01:43 IST" name="afterMethod" finished-at="2022-08-05T09:01:43 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense status=SUCCESS method=ExecuteManageExpensePage.verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense()[pri:1, instance:executeClass.ExecuteManageExpensePage@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:02:54 IST" name="beforeMethod" finished-at="2022-08-05T09:03:00 IST" duration-ms="6155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanCreateANewExpenseCategory()[pri:2, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:03:00 IST" name="verifyAdminCanCreateANewExpenseCategory" finished-at="2022-08-05T09:03:04 IST" duration-ms="4463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanCreateANewExpenseCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:03:04 IST" name="afterMethod" finished-at="2022-08-05T09:03:04 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanCreateANewExpenseCategory status=SUCCESS method=ExecuteManageExpensePage.verifyAdminCanCreateANewExpenseCategory()[pri:2, instance:executeClass.ExecuteManageExpensePage@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:04:37 IST" name="beforeMethod" finished-at="2022-08-05T09:04:45 IST" duration-ms="8171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanSearchNewlyCreatedOne()[pri:3, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:04:45 IST" name="verifyAdminCanSearchNewlyCreatedOne" finished-at="2022-08-05T09:04:49 IST" duration-ms="4084" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ Phone] but found [Phone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ Phone] but found [Phone]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at executeClass.ExecuteManageExpensePage.verifyAdminCanSearchNewlyCreatedOne(ExecuteManageExpensePage.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanSearchNewlyCreatedOne -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:04:49 IST" name="afterMethod" finished-at="2022-08-05T09:04:50 IST" duration-ms="773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanSearchNewlyCreatedOne status=FAILURE method=ExecuteManageExpensePage.verifyAdminCanSearchNewlyCreatedOne()[pri:3, instance:executeClass.ExecuteManageExpensePage@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:05:43 IST" name="beforeMethod" finished-at="2022-08-05T09:05:52 IST" duration-ms="8920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanEditTheCreatedOnes()[pri:4, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:05:52 IST" name="verifyAdminCanEditTheCreatedOnes" finished-at="2022-08-05T09:05:56 IST" duration-ms="4636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanEditTheCreatedOnes -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:05:56 IST" name="afterMethod" finished-at="2022-08-05T09:05:57 IST" duration-ms="618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanEditTheCreatedOnes status=SUCCESS method=ExecuteManageExpensePage.verifyAdminCanEditTheCreatedOnes()[pri:4, instance:executeClass.ExecuteManageExpensePage@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:06:53 IST" name="beforeMethod" finished-at="2022-08-05T09:07:01 IST" duration-ms="8005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanDeleteTheCreatedOne()[pri:5, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:07:01 IST" name="verifyAdminCanDeleteTheCreatedOne" finished-at="2022-08-05T09:07:04 IST" duration-ms="3155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanDeleteTheCreatedOne -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@53fe15ff]" started-at="2022-08-05T09:07:04 IST" name="afterMethod" finished-at="2022-08-05T09:07:04 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanDeleteTheCreatedOne status=SUCCESS method=ExecuteManageExpensePage.verifyAdminCanDeleteTheCreatedOne()[pri:5, instance:executeClass.ExecuteManageExpensePage@53fe15ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageExpensePage -->
    </test> <!-- Chrome Browser Test -->
    <test started-at="2022-08-05T09:01:17 IST" name="Edge Browser Test" finished-at="2022-08-05T09:09:37 IST" duration-ms="499901">
      <class name="executeClass.ExecuteManageOrderPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:02:46 IST" name="beforeMethod" finished-at="2022-08-05T09:02:58 IST" duration-ms="11840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanSearchAnOrderByUsingOrderId()[pri:1, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:02:58 IST" name="verifyTheAdminCanSearchAnOrderByUsingOrderId" finished-at="2022-08-05T09:03:04 IST" duration-ms="5708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanSearchAnOrderByUsingOrderId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:03:04 IST" name="afterMethod" finished-at="2022-08-05T09:03:05 IST" duration-ms="668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanSearchAnOrderByUsingOrderId status=SUCCESS method=ExecuteManageOrderPage.verifyTheAdminCanSearchAnOrderByUsingOrderId()[pri:1, instance:executeClass.ExecuteManageOrderPage@72cc7e6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:05:22 IST" name="beforeMethod" finished-at="2022-08-05T09:05:33 IST" duration-ms="11075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder()[pri:2, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:05:33 IST" name="vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder" finished-at="2022-08-05T09:05:39 IST" duration-ms="5802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageOrderPage@72cc7e6f]" started-at="2022-08-05T09:05:39 IST" name="afterMethod" finished-at="2022-08-05T09:05:40 IST" duration-ms="1445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder status=SUCCESS method=ExecuteManageOrderPage.vrifyTheAdminCanViewTheOrderDetailsOfSearchOrder()[pri:2, instance:executeClass.ExecuteManageOrderPage@72cc7e6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageOrderPage -->
      <class name="executeClass.ExecuteManageProductPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:01:51 IST" name="beforeMethod" finished-at="2022-08-05T09:02:01 IST" duration-ms="10259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct()[pri:1, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:02:01 IST" name="verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct" finished-at="2022-08-05T09:02:05 IST" duration-ms="3678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:02:05 IST" name="afterMethod" finished-at="2022-08-05T09:02:05 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct status=SUCCESS method=ExecuteManageProductPage.verifyListOfProductPageIsDisplayedWhileClickingOnManageProduct()[pri:1, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:04:37 IST" name="beforeMethod" finished-at="2022-08-05T09:04:47 IST" duration-ms="10259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanAddNewProductOrNot()[pri:2, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:04:47 IST" name="verifyUserCanAddNewProductOrNot" finished-at="2022-08-05T09:05:02 IST" duration-ms="14337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanAddNewProductOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:05:02 IST" name="afterMethod" finished-at="2022-08-05T09:05:06 IST" duration-ms="4372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanAddNewProductOrNot status=SUCCESS method=ExecuteManageProductPage.verifyUserCanAddNewProductOrNot()[pri:2, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:06:43 IST" name="beforeMethod" finished-at="2022-08-05T09:06:55 IST" duration-ms="12203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSearchAProductByUsingProductCode()[pri:3, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:06:55 IST" name="verifyUserCanSearchAProductByUsingProductCode" finished-at="2022-08-05T09:06:59 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSearchAProductByUsingProductCode -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:06:59 IST" name="afterMethod" finished-at="2022-08-05T09:07:11 IST" duration-ms="12100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSearchAProductByUsingProductCode status=SUCCESS method=ExecuteManageProductPage.verifyUserCanSearchAProductByUsingProductCode()[pri:3, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:08:14 IST" name="beforeMethod" finished-at="2022-08-05T09:08:22 IST" duration-ms="7705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanDeleteTheCreatedProductOrNot()[pri:4, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:08:22 IST" name="verifyTheUserCanDeleteTheCreatedProductOrNot" finished-at="2022-08-05T09:08:25 IST" duration-ms="3710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanDeleteTheCreatedProductOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:08:25 IST" name="afterMethod" finished-at="2022-08-05T09:08:26 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanDeleteTheCreatedProductOrNot status=SUCCESS method=ExecuteManageProductPage.verifyTheUserCanDeleteTheCreatedProductOrNot()[pri:4, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:08 IST" name="beforeMethod" finished-at="2022-08-05T09:09:15 IST" duration-ms="7432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheReSetButtonIsWorkingFineOrNot()[pri:5, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:15 IST" name="verifyTheReSetButtonIsWorkingFineOrNot" finished-at="2022-08-05T09:09:20 IST" duration-ms="4352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheReSetButtonIsWorkingFineOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:20 IST" name="afterMethod" finished-at="2022-08-05T09:09:20 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheReSetButtonIsWorkingFineOrNot status=SUCCESS method=ExecuteManageProductPage.verifyTheReSetButtonIsWorkingFineOrNot()[pri:5, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:20 IST" name="beforeMethod" finished-at="2022-08-05T09:09:29 IST" duration-ms="9427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton()[pri:6, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:29 IST" name="verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton" finished-at="2022-08-05T09:09:37 IST" duration-ms="7627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageProductPage@5afa3c9]" started-at="2022-08-05T09:09:37 IST" name="afterMethod" finished-at="2022-08-05T09:09:37 IST" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton status=SUCCESS method=ExecuteManageProductPage.verifyTheUserCanNavigateToTheLastPageByClickingOnLastButton()[pri:6, instance:executeClass.ExecuteManageProductPage@5afa3c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageProductPage -->
      <class name="executeClass.ExecuteManageUsersPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:03:05 IST" name="beforeMethod" finished-at="2022-08-05T09:03:15 IST" duration-ms="10866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers()[pri:1, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:03:15 IST" name="verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers" finished-at="2022-08-05T09:03:19 IST" duration-ms="3436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:03:19 IST" name="afterMethod" finished-at="2022-08-05T09:03:20 IST" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers status=SUCCESS method=ExecuteManageUsersPage.verifyTheListUsersPageIsDispalyedWhileClickingOnManageUsers()[pri:1, instance:executeClass.ExecuteManageUsersPage@909217e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:05:06 IST" name="beforeMethod" finished-at="2022-08-05T09:05:17 IST" duration-ms="10777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUsercnaSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:05:17 IST" name="verifyUsercnaSearchAUserByUsingName" finished-at="2022-08-05T09:05:21 IST" duration-ms="4520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercnaSearchAUserByUsingName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:05:21 IST" name="afterMethod" finished-at="2022-08-05T09:05:22 IST" duration-ms="755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercnaSearchAUserByUsingName status=SUCCESS method=ExecuteManageUsersPage.verifyUsercnaSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteManageUsersPage@909217e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:06:26 IST" name="beforeMethod" finished-at="2022-08-05T09:06:38 IST" duration-ms="12049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanSearchAUserByUsingEmailId()[pri:3, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:06:38 IST" name="verifyTheUserCanSearchAUserByUsingEmailId" finished-at="2022-08-05T09:06:42 IST" duration-ms="4235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanSearchAUserByUsingEmailId -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:06:42 IST" name="afterMethod" finished-at="2022-08-05T09:06:43 IST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanSearchAUserByUsingEmailId status=SUCCESS method=ExecuteManageUsersPage.verifyTheUserCanSearchAUserByUsingEmailId()[pri:3, instance:executeClass.ExecuteManageUsersPage@909217e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:07:58 IST" name="beforeMethod" finished-at="2022-08-05T09:08:06 IST" duration-ms="7600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser()[pri:4, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:08:06 IST" name="verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser" finished-at="2022-08-05T09:08:14 IST" duration-ms="7626" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//i[@class='fa fa-unlock'])[8]"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [c778f026712bcb8a88f019f0c93538dc, findElement {using=xpath, value=(//i[@class='fa fa-unlock'])[8]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54610}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54610/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c778f026712bcb8a88f019f0c93538dc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//i[@class='fa fa-unlock'])[8]"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [c778f026712bcb8a88f019f0c93538dc, findElement {using=xpath, value=(//i[@class='fa fa-unlock'])[8]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54610}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54610/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c778f026712bcb8a88f019f0c93538dc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:51)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:500)
at utility.GeneralUtilities.scrollToFindAnElement(GeneralUtilities.java:52)
at elementRepository.ManageUsersPage.scrollInToSoftWareTesterStatus(ManageUsersPage.java:106)
at executeClass.ExecuteManageUsersPage.verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser(ExecuteManageUsersPage.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageUsersPage@909217e]" started-at="2022-08-05T09:08:14 IST" name="afterMethod" finished-at="2022-08-05T09:08:14 IST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser status=FAILURE method=ExecuteManageUsersPage.verifyTheAdminCanChangeTheStatusOfSoftWareTesterUser()[pri:4, instance:executeClass.ExecuteManageUsersPage@909217e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageUsersPage -->
      <class name="executeClass.ExecuteLoginPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:02:18 IST" name="beforeMethod" finished-at="2022-08-05T09:02:29 IST" duration-ms="11219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginPageIsvisibleWhileLaunchingTheApplication()[pri:1, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:02:29 IST" name="verifyLoginPageIsvisibleWhileLaunchingTheApplication" finished-at="2022-08-05T09:02:29 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageIsvisibleWhileLaunchingTheApplication -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:02:29 IST" name="afterMethod" finished-at="2022-08-05T09:02:30 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageIsvisibleWhileLaunchingTheApplication status=SUCCESS method=ExecuteLoginPage.verifyLoginPageIsvisibleWhileLaunchingTheApplication()[pri:1, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:03:33 IST" name="beforeMethod" finished-at="2022-08-05T09:03:43 IST" duration-ms="10065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isrememberMeCheckBoxSelectedOrNot()[pri:2, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:03:43 IST" name="isrememberMeCheckBoxSelectedOrNot" finished-at="2022-08-05T09:03:43 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isrememberMeCheckBoxSelectedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:03:43 IST" name="afterMethod" finished-at="2022-08-05T09:03:44 IST" duration-ms="827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isrememberMeCheckBoxSelectedOrNot status=SUCCESS method=ExecuteLoginPage.isrememberMeCheckBoxSelectedOrNot()[pri:2, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:07:30 IST" name="beforeMethod" finished-at="2022-08-05T09:07:40 IST" duration-ms="9359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifysuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:07:40 IST" name="verifysuccessfulLogin" data-provider="DataProvider1" finished-at="2022-08-05T09:07:41 IST" duration-ms="1164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifysuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:07:41 IST" name="afterMethod" finished-at="2022-08-05T09:07:41 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifysuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifysuccessfulLogin(java.lang.String,java.lang.String)[pri:3, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:26 IST" name="beforeMethod" finished-at="2022-08-05T09:08:35 IST" duration-ms="9300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:35 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:08:36 IST" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:36 IST" name="afterMethod" finished-at="2022-08-05T09:08:36 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:36 IST" name="beforeMethod" finished-at="2022-08-05T09:08:43 IST" duration-ms="7585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:43 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:08:44 IST" duration-ms="583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ad12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:44 IST" name="afterMethod" finished-at="2022-08-05T09:08:44 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:44 IST" name="beforeMethod" finished-at="2022-08-05T09:08:51 IST" duration-ms="7203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:51 IST" name="verifyUnsuccessfulLogin" data-provider="DataProvider" finished-at="2022-08-05T09:08:52 IST" duration-ms="547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adm155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[afrt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteLoginPage@3ba987b8]" started-at="2022-08-05T09:08:52 IST" name="afterMethod" finished-at="2022-08-05T09:08:52 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=ExecuteLoginPage.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:4, instance:executeClass.ExecuteLoginPage@3ba987b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteLoginPage -->
      <class name="executeClass.executePushNotificationPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:02:30 IST" name="beforeMethod" finished-at="2022-08-05T09:02:39 IST" duration-ms="9153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification()[pri:1, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:02:39 IST" name="verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification" finished-at="2022-08-05T09:02:42 IST" duration-ms="3060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:02:42 IST" name="afterMethod" finished-at="2022-08-05T09:02:46 IST" duration-ms="4596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification status=SUCCESS method=executePushNotificationPage.verifyPushNotificationPageIsDisplayedWhileClickingOnPushNotification()[pri:1, instance:executeClass.executePushNotificationPage@18271936] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:04:04 IST" name="beforeMethod" finished-at="2022-08-05T09:04:18 IST" duration-ms="13377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheAdminCanSendANotificationSuccessfullyOrNot()[pri:2, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:04:18 IST" name="verifyTheAdminCanSendANotificationSuccessfullyOrNot" finished-at="2022-08-05T09:04:22 IST" duration-ms="4339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheAdminCanSendANotificationSuccessfullyOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:04:22 IST" name="afterMethod" finished-at="2022-08-05T09:04:22 IST" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheAdminCanSendANotificationSuccessfullyOrNot status=SUCCESS method=executePushNotificationPage.verifyTheAdminCanSendANotificationSuccessfullyOrNot()[pri:2, instance:executeClass.executePushNotificationPage@18271936] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:06:10 IST" name="beforeMethod" finished-at="2022-08-05T09:06:23 IST" duration-ms="12599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheResetButtonIsVisibleOrNot()[pri:3, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:06:23 IST" name="verifyTheResetButtonIsVisibleOrNot" finished-at="2022-08-05T09:06:25 IST" duration-ms="2534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheResetButtonIsVisibleOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.executePushNotificationPage@18271936]" started-at="2022-08-05T09:06:25 IST" name="afterMethod" finished-at="2022-08-05T09:06:26 IST" duration-ms="908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheResetButtonIsVisibleOrNot status=SUCCESS method=executePushNotificationPage.verifyTheResetButtonIsVisibleOrNot()[pri:3, instance:executeClass.executePushNotificationPage@18271936] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.executePushNotificationPage -->
      <class name="executeClass.ExecuteDashBoardPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:01:17 IST" name="beforeMethod" finished-at="2022-08-05T09:01:33 IST" duration-ms="15637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dashBoardIsVisibleAfterSuccessfulLogin()[pri:1, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:01:33 IST" name="dashBoardIsVisibleAfterSuccessfulLogin" finished-at="2022-08-05T09:01:35 IST" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashBoardIsVisibleAfterSuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:01:35 IST" name="afterMethod" finished-at="2022-08-05T09:01:37 IST" duration-ms="2237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dashBoardIsVisibleAfterSuccessfulLogin status=SUCCESS method=ExecuteDashBoardPage.dashBoardIsVisibleAfterSuccessfulLogin()[pri:1, instance:executeClass.ExecuteDashBoardPage@3f191845] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:03:20 IST" name="beforeMethod" finished-at="2022-08-05T09:03:30 IST" duration-ms="9682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isManagePageTileVisibleOrNot()[pri:2, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:03:30 IST" name="isManagePageTileVisibleOrNot" finished-at="2022-08-05T09:03:32 IST" duration-ms="1615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isManagePageTileVisibleOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:03:32 IST" name="afterMethod" finished-at="2022-08-05T09:03:33 IST" duration-ms="1077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isManagePageTileVisibleOrNot status=SUCCESS method=ExecuteDashBoardPage.isManagePageTileVisibleOrNot()[pri:2, instance:executeClass.ExecuteDashBoardPage@3f191845] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:05:40 IST" name="beforeMethod" finished-at="2022-08-05T09:05:53 IST" duration-ms="12235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="manageUsersMoreInfoArrowClicableOrNot()[pri:3, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:05:53 IST" name="manageUsersMoreInfoArrowClicableOrNot" finished-at="2022-08-05T09:05:55 IST" duration-ms="2667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageUsersMoreInfoArrowClicableOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteDashBoardPage@3f191845]" started-at="2022-08-05T09:05:55 IST" name="afterMethod" finished-at="2022-08-05T09:05:56 IST" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageUsersMoreInfoArrowClicableOrNot status=SUCCESS method=ExecuteDashBoardPage.manageUsersMoreInfoArrowClicableOrNot()[pri:3, instance:executeClass.ExecuteDashBoardPage@3f191845] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteDashBoardPage -->
      <class name="executeClass.ExecuteVerifyUsersPage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:02:05 IST" name="beforeMethod" finished-at="2022-08-05T09:02:15 IST" duration-ms="9926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers()[pri:1, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:02:15 IST" name="verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers" finished-at="2022-08-05T09:02:18 IST" duration-ms="2553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:02:18 IST" name="afterMethod" finished-at="2022-08-05T09:02:18 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers status=SUCCESS method=ExecuteVerifyUsersPage.verifyListUsersPageIsDisplayedWhileClickingOnVerifyUsers()[pri:1, instance:executeClass.ExecuteVerifyUsersPage@72035809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:04:22 IST" name="beforeMethod" finished-at="2022-08-05T09:04:34 IST" duration-ms="11344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheUserCanSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:04:34 IST" name="verifyTheUserCanSearchAUserByUsingName" finished-at="2022-08-05T09:04:36 IST" duration-ms="2793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanSearchAUserByUsingName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:04:36 IST" name="afterMethod" finished-at="2022-08-05T09:04:37 IST" duration-ms="459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanSearchAUserByUsingName status=SUCCESS method=ExecuteVerifyUsersPage.verifyTheUserCanSearchAUserByUsingName()[pri:2, instance:executeClass.ExecuteVerifyUsersPage@72035809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:07:11 IST" name="beforeMethod" finished-at="2022-08-05T09:07:27 IST" duration-ms="15147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSearchAUserByUsingPhoneNumber()[pri:3, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:07:27 IST" name="verifyUserCanSearchAUserByUsingPhoneNumber" finished-at="2022-08-05T09:07:30 IST" duration-ms="3446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSearchAUserByUsingPhoneNumber -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteVerifyUsersPage@72035809]" started-at="2022-08-05T09:07:30 IST" name="afterMethod" finished-at="2022-08-05T09:07:30 IST" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSearchAUserByUsingPhoneNumber status=SUCCESS method=ExecuteVerifyUsersPage.verifyUserCanSearchAUserByUsingPhoneNumber()[pri:3, instance:executeClass.ExecuteVerifyUsersPage@72035809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteVerifyUsersPage -->
      <class name="executeClass.ExecuteManageExpensePage">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:01:37 IST" name="beforeMethod" finished-at="2022-08-05T09:01:47 IST" duration-ms="10711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense()[pri:1, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:01:47 IST" name="verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense" finished-at="2022-08-05T09:01:50 IST" duration-ms="2857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:01:50 IST" name="afterMethod" finished-at="2022-08-05T09:01:51 IST" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense status=SUCCESS method=ExecuteManageExpensePage.verifyExpenseCategoryIsVisibleWhileClickingOnExpenseCategoryUnderManageExpense()[pri:1, instance:executeClass.ExecuteManageExpensePage@5f049ea1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:03:44 IST" name="beforeMethod" finished-at="2022-08-05T09:03:55 IST" duration-ms="11676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanCreateANewExpenseCategory()[pri:2, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:03:55 IST" name="verifyAdminCanCreateANewExpenseCategory" finished-at="2022-08-05T09:04:04 IST" duration-ms="8176" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [2da8492c555b22ecb8f2a01d493c874e, findElement {using=xpath, value=//div[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:52747}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52747/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2da8492c555b22ecb8f2a01d493c874e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [2da8492c555b22ecb8f2a01d493c874e, findElement {using=xpath, value=//div[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:52747}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52747/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2da8492c555b22ecb8f2a01d493c874e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.isDisplayed(Unknown Source)
at utility.GeneralUtilities.isDisplayedMethod(GeneralUtilities.java:31)
at elementRepository.ManageExpensePage.isAlerttextDisplayed(ManageExpensePage.java:106)
at executeClass.ExecuteManageExpensePage.verifyAdminCanCreateANewExpenseCategory(ExecuteManageExpensePage.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanCreateANewExpenseCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:04:04 IST" name="afterMethod" finished-at="2022-08-05T09:04:04 IST" duration-ms="579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanCreateANewExpenseCategory status=FAILURE method=ExecuteManageExpensePage.verifyAdminCanCreateANewExpenseCategory()[pri:2, instance:executeClass.ExecuteManageExpensePage@5f049ea1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:05:56 IST" name="beforeMethod" finished-at="2022-08-05T09:06:06 IST" duration-ms="10484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanSearchNewlyCreatedOne()[pri:3, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:06:06 IST" name="verifyAdminCanSearchNewlyCreatedOne" finished-at="2022-08-05T09:06:10 IST" duration-ms="3258" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ Phone] but found [Mobile Phone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ Phone] but found [Mobile Phone]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at executeClass.ExecuteManageExpensePage.verifyAdminCanSearchNewlyCreatedOne(ExecuteManageExpensePage.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanSearchNewlyCreatedOne -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:06:10 IST" name="afterMethod" finished-at="2022-08-05T09:06:10 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanSearchNewlyCreatedOne status=FAILURE method=ExecuteManageExpensePage.verifyAdminCanSearchNewlyCreatedOne()[pri:3, instance:executeClass.ExecuteManageExpensePage@5f049ea1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:07:41 IST" name="beforeMethod" finished-at="2022-08-05T09:07:50 IST" duration-ms="9159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanEditTheCreatedOnes()[pri:4, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:07:50 IST" name="verifyAdminCanEditTheCreatedOnes" finished-at="2022-08-05T09:07:58 IST" duration-ms="7519" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='btn btn-sm btn btn-primary btncss']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [433d0c00531bd7bff187b18923825749, findElement {using=xpath, value=//a[@class='btn btn-sm btn btn-primary btncss']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54529}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54529/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 433d0c00531bd7bff187b18923825749]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='btn btn-sm btn btn-primary btncss']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [433d0c00531bd7bff187b18923825749, findElement {using=xpath, value=//a[@class='btn btn-sm btn btn-primary btncss']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54529}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54529/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 433d0c00531bd7bff187b18923825749
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utility.GeneralUtilities.clickElement(GeneralUtilities.java:16)
at elementRepository.ManageExpensePage.ClickOnEditIcon(ManageExpensePage.java:131)
at executeClass.ExecuteManageExpensePage.verifyAdminCanEditTheCreatedOnes(ExecuteManageExpensePage.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanEditTheCreatedOnes -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:07:58 IST" name="afterMethod" finished-at="2022-08-05T09:07:58 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanEditTheCreatedOnes status=FAILURE method=ExecuteManageExpensePage.verifyAdminCanEditTheCreatedOnes()[pri:4, instance:executeClass.ExecuteManageExpensePage@5f049ea1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:08:52 IST" name="beforeMethod" finished-at="2022-08-05T09:08:59 IST" duration-ms="7322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAdminCanDeleteTheCreatedOne()[pri:5, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:08:59 IST" name="verifyAdminCanDeleteTheCreatedOne" finished-at="2022-08-05T09:09:07 IST" duration-ms="7820" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='btn btn-sm btn btn-danger btncss']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [34bb43011fa2ba7518517673639c34f2, findElement {using=xpath, value=//a[@class='btn btn-sm btn btn-danger btncss']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54972}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54972/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 34bb43011fa2ba7518517673639c34f2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='btn btn-sm btn btn-danger btncss']"}
  (Session info: MicrosoftEdge=103.0.1264.77)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-G8IH0JN', ip: '192.168.1.8', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [34bb43011fa2ba7518517673639c34f2, findElement {using=xpath, value=//a[@class='btn btn-sm btn btn-danger btncss']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.77, ms:edgeOptions: {debuggerAddress: localhost:54972}, msedge: {msedgedriverVersion: 103.0.1264.71 (1f7a1d165042..., userDataDir: C:\Users\JITHIN~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54972/devtoo..., se:cdpVersion: 103.0.1264.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 34bb43011fa2ba7518517673639c34f2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utility.GeneralUtilities.clickElement(GeneralUtilities.java:16)
at elementRepository.ManageExpensePage.clickOnDeleteButton(ManageExpensePage.java:156)
at executeClass.ExecuteManageExpensePage.verifyAdminCanDeleteTheCreatedOne(ExecuteManageExpensePage.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminCanDeleteTheCreatedOne -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExecuteManageExpensePage@5f049ea1]" started-at="2022-08-05T09:09:07 IST" name="afterMethod" finished-at="2022-08-05T09:09:08 IST" duration-ms="512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminCanDeleteTheCreatedOne status=FAILURE method=ExecuteManageExpensePage.verifyAdminCanDeleteTheCreatedOne()[pri:5, instance:executeClass.ExecuteManageExpensePage@5f049ea1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExecuteManageExpensePage -->
    </test> <!-- Edge Browser Test -->
  </suite> <!-- Cross Browser Test Suite -->
</testng-results>
